/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGCARBONWINDOWFIELDS_H_
#define _OSGCARBONWINDOWFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGWindowCarbonDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class CarbonWindow;

OSG_GEN_CONTAINERPTR(CarbonWindow);

/*! \ingroup GrpWindowCarbonFieldTraits
    \ingroup GrpLibOSGWindowCarbon
 */
template <>
struct FieldTraits<CarbonWindow *> :
    public FieldTraitsFCPtrBase<CarbonWindow *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<CarbonWindow *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_WINDOWCARBON_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFCarbonWindowPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFCarbonWindowPtr"; }
};

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakCarbonWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<CarbonWindow *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdCarbonWindowPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpWindowCarbonFieldSFields */
typedef PointerSField<CarbonWindow *,
                      RecordedRefCountPolicy  > SFRecCarbonWindowPtr;
/*! \ingroup GrpWindowCarbonFieldSFields */
typedef PointerSField<CarbonWindow *,
                      UnrecordedRefCountPolicy> SFUnrecCarbonWindowPtr;
/*! \ingroup GrpWindowCarbonFieldSFields */
typedef PointerSField<CarbonWindow *,
                      WeakRefCountPolicy      > SFWeakCarbonWindowPtr;
/*! \ingroup GrpWindowCarbonFieldSFields */
typedef PointerSField<CarbonWindow *,
                      NoRefCountPolicy        > SFUncountedCarbonWindowPtr;


/*! \ingroup GrpWindowCarbonFieldMFields */
typedef PointerMField<CarbonWindow *,
                      RecordedRefCountPolicy  > MFRecCarbonWindowPtr;
/*! \ingroup GrpWindowCarbonFieldMFields */
typedef PointerMField<CarbonWindow *,
                      UnrecordedRefCountPolicy> MFUnrecCarbonWindowPtr;
/*! \ingroup GrpWindowCarbonFieldMFields */
typedef PointerMField<CarbonWindow *,
                      WeakRefCountPolicy      > MFWeakCarbonWindowPtr;
/*! \ingroup GrpWindowCarbonFieldMFields */
typedef PointerMField<CarbonWindow *,
                      NoRefCountPolicy        > MFUncountedCarbonWindowPtr;




#else // these are the doxygen hacks

/*! \ingroup GrpWindowCarbonFieldSFields \ingroup GrpLibOSGWindowCarbon */
struct SFRecCarbonWindowPtr : 
    public PointerSField<CarbonWindow *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpWindowCarbonFieldSFields \ingroup GrpLibOSGWindowCarbon */
struct SFUnrecCarbonWindowPtr : 
    public PointerSField<CarbonWindow *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpWindowCarbonFieldSFields \ingroup GrpLibOSGWindowCarbon */
struct SFWeakCarbonWindowPtr :
    public PointerSField<CarbonWindow *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpWindowCarbonFieldSFields \ingroup GrpLibOSGWindowCarbon */
struct SFUncountedCarbonWindowPtr :
    public PointerSField<CarbonWindow *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpWindowCarbonFieldMFields \ingroup GrpLibOSGWindowCarbon */
struct MFRecCarbonWindowPtr :
    public PointerMField<CarbonWindow *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpWindowCarbonFieldMFields \ingroup GrpLibOSGWindowCarbon */
struct MFUnrecCarbonWindowPtr :
    public PointerMField<CarbonWindow *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpWindowCarbonFieldMFields \ingroup GrpLibOSGWindowCarbon */
struct MFWeakCarbonWindowPtr :
    public PointerMField<CarbonWindow *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpWindowCarbonFieldMFields \ingroup GrpLibOSGWindowCarbon */
struct MFUncountedCarbonWindowPtr :
    public PointerMField<CarbonWindow *,
                         NoRefCountPolicy        > {};



#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGCARBONWINDOWFIELDS_H_ */
