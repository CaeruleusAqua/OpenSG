/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000-2002 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGQTWINDOWFIELDS_H_
#define _OSGQTWINDOWFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGWindowQT4Def.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class QTWindow;

#if !defined(OSG_DO_DOC) // created as a dummy class, remove to prevent doubles
//! QTWindowPtr

OSG_GEN_CONTAINERPTR(QTWindow);

#endif

#if !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)
/*! \brief QTWindow field traits 
    \ingroup GrpWindowQTField
    \ingroup GrpWindowQTFieldTraits
 */
 #if !defined(OSG_DOC_DEV_TRAITS)
/*! \hideinhierarchy */
#endif

template <>
struct FieldTraits<QTWindow *> :
    public FieldTraitsFCPtrBase<QTWindow *>
{
private:

    static DataType             _type;

public:

    typedef FieldTraits<QTWindow *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_WINDOWQTLIB_DLLMAPPING DataType &getType(void)
	{return _type;}

    template<typename RefCountPolicy> inline
        static const Char8    *getSName     (void);
    
    template<typename RefCountPolicy> inline
        static const Char8    *getMName     (void);

};

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakQTWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<QTWindow *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdQTWindowPtr"; 
}

#if !defined(OSG_DOC_DEV_TRAITS)
/*! \class FieldTraitsRecurseMapper<QTWindowPtr, true> */
/*! \hideinhierarchy                                   */
#endif

#endif // !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)


#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS) 
/*! \ingroup GrpWindowQTFieldSingle */

typedef PointerSField<QTWindow *,
RecordedRefCountPolicy  > SFRecQTWindowPtr;
typedef PointerSField<QTWindow *,
UnrecordedRefCountPolicy> SFUnrecQTWindowPtr;
typedef PointerSField<QTWindow *,
WeakRefCountPolicy      > SFWeakQTWindowPtr;
typedef PointerSField<QTWindow *,
NoRefCountPolicy        > SFUncountedQTWindowPtr;
#endif

#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS) 
/*! \ingroup GrpWindowQTFieldMulti */

typedef PointerMField<QTWindow *,
RecordedRefCountPolicy  > MFRecQTWindowPtr;
typedef PointerMField<QTWindow *,
UnrecordedRefCountPolicy> MFUnrecQTWindowPtr;
typedef PointerMField<QTWindow *,
WeakRefCountPolicy      > MFWeakQTWindowPtr;
typedef PointerMField<QTWindow *,
NoRefCountPolicy        > MFUncountedQTWindowPtr;

#endif

OSG_END_NAMESPACE

#endif /* _OSGQTWINDOWFIELDS_H_ */
