/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGVARIANTMATERIALFIELDS_H_
#define _OSGVARIANTMATERIALFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGSystemDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE


class VariantMaterial;

OSG_GEN_CONTAINERPTR(VariantMaterial);
/*! \ingroup GrpSystemMaterialFieldTraits
    \ingroup GrpLibOSGSystem
 */
template <>
struct FieldTraits<VariantMaterial *, nsOSG> :
    public FieldTraitsFCPtrBase<VariantMaterial *, nsOSG>
{
  private:

    static PointerType             _type;

  public:

    typedef FieldTraits<VariantMaterial *, nsOSG>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_SYSTEM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

};

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakVariantMaterialPtr"; 
}

template<> inline
const Char8 *FieldTraits<VariantMaterial *, nsOSG>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdVariantMaterialPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpSystemMaterialFieldSFields */
typedef PointerSField<VariantMaterial *,
                      RecordedRefCountPolicy, nsOSG  > SFRecVariantMaterialPtr;
/*! \ingroup GrpSystemMaterialFieldSFields */
typedef PointerSField<VariantMaterial *,
                      UnrecordedRefCountPolicy, nsOSG> SFUnrecVariantMaterialPtr;
/*! \ingroup GrpSystemMaterialFieldSFields */
typedef PointerSField<VariantMaterial *,
                      WeakRefCountPolicy, nsOSG      > SFWeakVariantMaterialPtr;
/*! \ingroup GrpSystemMaterialFieldSFields */
typedef PointerSField<VariantMaterial *,
                      NoRefCountPolicy, nsOSG        > SFUncountedVariantMaterialPtr;


/*! \ingroup GrpSystemMaterialFieldMFields */
typedef PointerMField<VariantMaterial *,
                      RecordedRefCountPolicy, nsOSG  > MFRecVariantMaterialPtr;
/*! \ingroup GrpSystemMaterialFieldMFields */
typedef PointerMField<VariantMaterial *,
                      UnrecordedRefCountPolicy, nsOSG> MFUnrecVariantMaterialPtr;
/*! \ingroup GrpSystemMaterialFieldMFields */
typedef PointerMField<VariantMaterial *,
                      WeakRefCountPolicy, nsOSG      > MFWeakVariantMaterialPtr;
/*! \ingroup GrpSystemMaterialFieldMFields */
typedef PointerMField<VariantMaterial *,
                      NoRefCountPolicy, nsOSG        > MFUncountedVariantMaterialPtr;




#else // these are the doxygen hacks

/*! \ingroup GrpSystemMaterialFieldSFields \ingroup GrpLibOSGSystem */
struct SFRecVariantMaterialPtr : 
    public PointerSField<VariantMaterial *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpSystemMaterialFieldSFields \ingroup GrpLibOSGSystem */
struct SFUnrecVariantMaterialPtr : 
    public PointerSField<VariantMaterial *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpSystemMaterialFieldSFields \ingroup GrpLibOSGSystem */
struct SFWeakVariantMaterialPtr :
    public PointerSField<VariantMaterial *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpSystemMaterialFieldSFields \ingroup GrpLibOSGSystem */
struct SFUncountedVariantMaterialPtr :
    public PointerSField<VariantMaterial *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpSystemMaterialFieldMFields \ingroup GrpLibOSGSystem */
struct MFRecVariantMaterialPtr :
    public PointerMField<VariantMaterial *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpSystemMaterialFieldMFields \ingroup GrpLibOSGSystem */
struct MFUnrecVariantMaterialPtr :
    public PointerMField<VariantMaterial *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpSystemMaterialFieldMFields \ingroup GrpLibOSGSystem */
struct MFWeakVariantMaterialPtr :
    public PointerMField<VariantMaterial *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpSystemMaterialFieldMFields \ingroup GrpLibOSGSystem */
struct MFUncountedVariantMaterialPtr :
    public PointerMField<VariantMaterial *,
                         NoRefCountPolicy        > {};



#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGVARIANTMATERIALFIELDS_H_ */
