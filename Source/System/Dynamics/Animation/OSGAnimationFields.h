/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGANIMATIONFIELDS_H_
#define _OSGANIMATIONFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGDynamicsDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE


class Animation;

OSG_GEN_CONTAINERPTR(Animation);
/*! \ingroup GrpDynamicsFieldTraits
    \ingroup GrpLibOSGDynamics
 */
template <>
struct FieldTraits<Animation *, nsOSG> :
    public FieldTraitsFCPtrBase<Animation *, nsOSG>
{
  private:

    static PointerType             _type;

  public:

    typedef FieldTraits<Animation *, nsOSG>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DYNAMICS_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

};

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakAnimationPtr"; 
}

template<> inline
const Char8 *FieldTraits<Animation *, nsOSG>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdAnimationPtr"; 
}


/*! \ingroup GrpDynamicsFieldTraits
 */
template <>
struct FieldTraits<Animation *, nsOSG + 1> : 
    public FieldTraitsFCPtrBase<Animation *, nsOSG + 1>
{
  private:

    static  DataType                                _type;

  public:

    static const bool bIsPointerField = true;

    typedef FieldTraits<Animation *, nsOSG + 1> Self;


    enum             { Convertible = Self::NotConvertible };
    
    static OSG_DYNAMICS_DLLMAPPING
                 DataType &getType (void);

    static const Char8    *getSName(void) 
    {
        return "SFParentAnimationPtr"; 
    }

    static const Char8    *getMName(void) 
    { 
        return "MFParentAnimationPtr"; 
    }
};

#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<Animation *,
                      RecordedRefCountPolicy, nsOSG  > SFRecAnimationPtr;
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<Animation *,
                      UnrecordedRefCountPolicy, nsOSG> SFUnrecAnimationPtr;
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<Animation *,
                      WeakRefCountPolicy, nsOSG      > SFWeakAnimationPtr;
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<Animation *,
                      NoRefCountPolicy, nsOSG        > SFUncountedAnimationPtr;


/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<Animation *,
                      RecordedRefCountPolicy, nsOSG  > MFRecAnimationPtr;
/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<Animation *,
                      UnrecordedRefCountPolicy, nsOSG> MFUnrecAnimationPtr;
/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<Animation *,
                      WeakRefCountPolicy, nsOSG      > MFWeakAnimationPtr;
/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<Animation *,
                      NoRefCountPolicy, nsOSG        > MFUncountedAnimationPtr;



/*! \ingroup GrpDynamicsFieldSFields */
typedef ParentPointerSField<
          Animation *, 
          NoRefCountPolicy,
          nsOSG + 1    > SFParentAnimationPtr;

/*! \ingroup GrpDynamicsFieldMFields */
typedef ParentPointerMField<
          Animation *, 
          NoRefCountPolicy,
          nsOSG + 1    > MFParentAnimationPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFRecAnimationPtr : 
    public PointerSField<Animation *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFUnrecAnimationPtr : 
    public PointerSField<Animation *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFWeakAnimationPtr :
    public PointerSField<Animation *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFUncountedAnimationPtr :
    public PointerSField<Animation *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFRecAnimationPtr :
    public PointerMField<Animation *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFUnrecAnimationPtr :
    public PointerMField<Animation *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFWeakAnimationPtr :
    public PointerMField<Animation *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFUncountedAnimationPtr :
    public PointerMField<Animation *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFParentAnimationPtr :
    public ParentPointerSField<
        Animation *, 
        NoRefCountPolicy,
        nsOSG + 1    > {};

/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFParentAnimationPtr :
    public  ParentPointerMField<
        Animation *, 
        NoRefCountPolicy,
        nsOSG + 1    > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGANIMATIONFIELDS_H_ */
