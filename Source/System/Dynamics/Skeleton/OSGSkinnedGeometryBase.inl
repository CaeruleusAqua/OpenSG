/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SkinnedGeometry!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SkinnedGeometryBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 SkinnedGeometryBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 SkinnedGeometryBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the SkinnedGeometry::_sfSkeleton field.
inline
Skeleton * SkinnedGeometryBase::getSkeleton(void) const
{
    return _sfSkeleton.getValue();
}

//! Set the value of the SkinnedGeometry::_sfSkeleton field.
inline
void SkinnedGeometryBase::setSkeleton(Skeleton * const value)
{
    editSField(SkeletonFieldMask);

    _sfSkeleton.setValue(value);
}
//! Get the value of the SkinnedGeometry::_sfBindShapeMatrix field.

inline
Matrix &SkinnedGeometryBase::editBindShapeMatrix(void)
{
    editSField(BindShapeMatrixFieldMask);

    return _sfBindShapeMatrix.getValue();
}

//! Get the value of the SkinnedGeometry::_sfBindShapeMatrix field.
inline
const Matrix &SkinnedGeometryBase::getBindShapeMatrix(void) const
{
    return _sfBindShapeMatrix.getValue();
}

//! Set the value of the SkinnedGeometry::_sfBindShapeMatrix field.
inline
void SkinnedGeometryBase::setBindShapeMatrix(const Matrix &value)
{
    editSField(BindShapeMatrixFieldMask);

    _sfBindShapeMatrix.setValue(value);
}
//! Get the value of the SkinnedGeometry::_sfJointIndexProperty field.

inline
UInt16 &SkinnedGeometryBase::editJointIndexProperty(void)
{
    editSField(JointIndexPropertyFieldMask);

    return _sfJointIndexProperty.getValue();
}

//! Get the value of the SkinnedGeometry::_sfJointIndexProperty field.
inline
      UInt16  SkinnedGeometryBase::getJointIndexProperty(void) const
{
    return _sfJointIndexProperty.getValue();
}

//! Set the value of the SkinnedGeometry::_sfJointIndexProperty field.
inline
void SkinnedGeometryBase::setJointIndexProperty(const UInt16 value)
{
    editSField(JointIndexPropertyFieldMask);

    _sfJointIndexProperty.setValue(value);
}
//! Get the value of the SkinnedGeometry::_sfJointWeightProperty field.

inline
UInt16 &SkinnedGeometryBase::editJointWeightProperty(void)
{
    editSField(JointWeightPropertyFieldMask);

    return _sfJointWeightProperty.getValue();
}

//! Get the value of the SkinnedGeometry::_sfJointWeightProperty field.
inline
      UInt16  SkinnedGeometryBase::getJointWeightProperty(void) const
{
    return _sfJointWeightProperty.getValue();
}

//! Set the value of the SkinnedGeometry::_sfJointWeightProperty field.
inline
void SkinnedGeometryBase::setJointWeightProperty(const UInt16 value)
{
    editSField(JointWeightPropertyFieldMask);

    _sfJointWeightProperty.setValue(value);
}
//! Get the value of the SkinnedGeometry::_sfFlags field.

inline
UInt32 &SkinnedGeometryBase::editFlags(void)
{
    editSField(FlagsFieldMask);

    return _sfFlags.getValue();
}

//! Get the value of the SkinnedGeometry::_sfFlags field.
inline
      UInt32  SkinnedGeometryBase::getFlags(void) const
{
    return _sfFlags.getValue();
}

//! Set the value of the SkinnedGeometry::_sfFlags field.
inline
void SkinnedGeometryBase::setFlags(const UInt32 value)
{
    editSField(FlagsFieldMask);

    _sfFlags.setValue(value);
}

//! Get the value of the SkinnedGeometry::_sfShaderCode field.
inline
ShaderProgramChunk * SkinnedGeometryBase::getShaderCode(void) const
{
    return _sfShaderCode.getValue();
}

//! Set the value of the SkinnedGeometry::_sfShaderCode field.
inline
void SkinnedGeometryBase::setShaderCode(ShaderProgramChunk * const value)
{
    editSField(ShaderCodeFieldMask);

    _sfShaderCode.setValue(value);
}

//! Get the value of the SkinnedGeometry::_sfShaderData field.
inline
ShaderProgramVariableChunk * SkinnedGeometryBase::getShaderData(void) const
{
    return _sfShaderData.getValue();
}

//! Set the value of the SkinnedGeometry::_sfShaderData field.
inline
void SkinnedGeometryBase::setShaderData(ShaderProgramVariableChunk * const value)
{
    editSField(ShaderDataFieldMask);

    _sfShaderData.setValue(value);
}

//! Get the value of the \a index element the SkinnedGeometry::_mfJointIds field.
inline
      Int16  SkinnedGeometryBase::getJointIds(const UInt32 index) const
{
    return _mfJointIds[index];
}

inline
Int16 &SkinnedGeometryBase::editJointIds(const UInt32 index)
{
    editMField(JointIdsFieldMask, _mfJointIds);

    return _mfJointIds[index];
}



#ifdef OSG_MT_CPTR_ASPECT
inline
void SkinnedGeometryBase::execSync (      SkinnedGeometryBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (SkeletonFieldMask & whichField))
        _sfSkeleton.syncWith(pFrom->_sfSkeleton);

    if(FieldBits::NoField != (BindShapeMatrixFieldMask & whichField))
        _sfBindShapeMatrix.syncWith(pFrom->_sfBindShapeMatrix);

    if(FieldBits::NoField != (JointIdsFieldMask & whichField))
        _mfJointIds.syncWith(pFrom->_mfJointIds,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (JointIndexPropertyFieldMask & whichField))
        _sfJointIndexProperty.syncWith(pFrom->_sfJointIndexProperty);

    if(FieldBits::NoField != (JointWeightPropertyFieldMask & whichField))
        _sfJointWeightProperty.syncWith(pFrom->_sfJointWeightProperty);

    if(FieldBits::NoField != (FlagsFieldMask & whichField))
        _sfFlags.syncWith(pFrom->_sfFlags);

    if(FieldBits::NoField != (ShaderCodeFieldMask & whichField))
        _sfShaderCode.syncWith(pFrom->_sfShaderCode);

    if(FieldBits::NoField != (ShaderDataFieldMask & whichField))
        _sfShaderData.syncWith(pFrom->_sfShaderData);
}
#endif


inline
const Char8 *SkinnedGeometryBase::getClassname(void)
{
    return "SkinnedGeometry";
}
OSG_GEN_CONTAINERPTR(SkinnedGeometry);

OSG_END_NAMESPACE

