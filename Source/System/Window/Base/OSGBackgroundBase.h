/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Background
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGBACKGROUNDBASE_H_
#define _OSGBACKGROUNDBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGSystemDef.h"

//#include "OSGBaseTypes.h"

#include "OSGAttachmentContainer.h" // Parent

#include "OSGSysFields.h" // ClearStencilBit type

#include "OSGBackgroundFields.h"

OSG_BEGIN_NAMESPACE

class Background;

//! \brief Background Base Class.

class OSG_SYSTEM_DLLMAPPING BackgroundBase : public AttachmentContainer
{
  public:

    typedef AttachmentContainer Inherited;
    typedef AttachmentContainer ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(Background);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ClearStencilBitFieldId = Inherited::NextFieldId,
        DepthFieldId = ClearStencilBitFieldId + 1,
        ClearDepthFieldId = DepthFieldId + 1,
        ClearColorFieldId = ClearDepthFieldId + 1,
        NextFieldId = ClearColorFieldId + 1
    };

    static const OSG::BitVector ClearStencilBitFieldMask =
        (TypeTraits<BitVector>::One << ClearStencilBitFieldId);
    static const OSG::BitVector DepthFieldMask =
        (TypeTraits<BitVector>::One << DepthFieldId);
    static const OSG::BitVector ClearDepthFieldMask =
        (TypeTraits<BitVector>::One << ClearDepthFieldId);
    static const OSG::BitVector ClearColorFieldMask =
        (TypeTraits<BitVector>::One << ClearColorFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFInt32           SFClearStencilBitType;
    typedef SFReal32          SFDepthType;
    typedef SFBool            SFClearDepthType;
    typedef SFBool            SFClearColorType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFInt32             *editSFClearStencilBit(void);
            const SFInt32             *getSFClearStencilBit (void) const;

                  SFReal32            *editSFDepth          (void);
            const SFReal32            *getSFDepth           (void) const;

                  SFBool              *editSFClearDepth     (void);
            const SFBool              *getSFClearDepth      (void) const;

                  SFBool              *editSFClearColor     (void);
            const SFBool              *getSFClearColor      (void) const;


                  Int32               &editClearStencilBit(void);
                  Int32                getClearStencilBit (void) const;

                  Real32              &editDepth          (void);
                  Real32               getDepth           (void) const;

                  bool                &editClearDepth     (void);
                  bool                 getClearDepth      (void) const;

                  bool                &editClearColor     (void);
                  bool                 getClearColor      (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setClearStencilBit(const Int32 value);
            void setDepth          (const Real32 value);
            void setClearDepth     (const bool value);
            void setClearColor     (const bool value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFInt32           _sfClearStencilBit;
    SFReal32          _sfDepth;
    SFBool            _sfClearDepth;
    SFBool            _sfClearColor;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    BackgroundBase(void);
    BackgroundBase(const BackgroundBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~BackgroundBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleClearStencilBit (void) const;
    EditFieldHandlePtr editHandleClearStencilBit(void);
    GetFieldHandlePtr  getHandleDepth           (void) const;
    EditFieldHandlePtr editHandleDepth          (void);
    GetFieldHandlePtr  getHandleClearDepth      (void) const;
    EditFieldHandlePtr editHandleClearDepth     (void);
    GetFieldHandlePtr  getHandleClearColor      (void) const;
    EditFieldHandlePtr editHandleClearColor     (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      BackgroundBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const BackgroundBase &source);
};

typedef BackgroundBase *BackgroundBaseP;

OSG_END_NAMESPACE

#endif /* _OSGBACKGROUNDBASE_H_ */
