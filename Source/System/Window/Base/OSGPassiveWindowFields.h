/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPASSIVEWINDOWFIELDS_H_
#define _OSGPASSIVEWINDOWFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGSystemDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGFieldContainerPtrSField.h"
#include "OSGFieldContainerPtrMField.h"


OSG_BEGIN_NAMESPACE

class PassiveWindow;

#if !defined(OSG_DO_DOC) // created as a dummy class, remove to prevent doubles
//! PassiveWindowPtr

OSG_GEN_CONTAINERPTR(PassiveWindow);

#endif

#if !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)
/*! \ingroup GrpSystemFieldTraits
 */
#if !defined(OSG_DOC_DEV_TRAITS)
/*! \hideinhierarchy */
#endif

template <>
struct FieldTraits<PassiveWindowPtr> :
    public FieldTraitsFCPtrBase<PassiveWindowPtr>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<PassiveWindowPtr>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_SYSTEM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFPassiveWindowPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFPassiveWindowPtr"; }
};

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getSName<RecordedRefCounts>(void)
{
    return "SFRecPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getSName<UnrecordedRefCounts>(void)
{
    return "SFUnrecPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getSName<WeakRefCounts>(void)
{
    return "SFWeakPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getSName<NoRefCounts>(void)
{
    return "SFUnrefdPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getMName<RecordedRefCounts>(void)
{
    return "MFRecPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getMName<UnrecordedRefCounts>(void)
{
    return "MFUnrecPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getMName<WeakRefCounts>(void)
{
    return "MFWeakPassiveWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<PassiveWindowPtr, 0>::getMName<NoRefCounts>(void)
{
    return "MFUnrefdPassiveWindowPtr"; 
}

#if !defined(OSG_DOC_DEV_TRAITS)
/*! \class  FieldTraitsTemplateBase<PassiveWindowPtr, 0>
    \hideinhierarchy
 */
#endif

#endif // !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)


#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS)
/*! \ingroup GrpSystemFieldSingle */

typedef FieldContainerPtrSField<PassiveWindowPtr,
                                RecordedRefCounts  > SFRecPassiveWindowPtr;
typedef FieldContainerPtrSField<PassiveWindowPtr,
                                UnrecordedRefCounts> SFUnrecPassiveWindowPtr;
typedef FieldContainerPtrSField<PassiveWindowPtr,
                                WeakRefCounts      > SFWeakPassiveWindowPtr;
typedef FieldContainerPtrSField<PassiveWindowPtr,
                                NoRefCounts        > SFUncountedPassiveWindowPtr;
#endif


#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS)
/*! \ingroup GrpSystemFieldMulti */

typedef FieldContainerPtrMField<PassiveWindowPtr,
                                RecordedRefCounts  > MFRecPassiveWindowPtr;
typedef FieldContainerPtrMField<PassiveWindowPtr,
                                UnrecordedRefCounts> MFUnrecPassiveWindowPtr;
typedef FieldContainerPtrMField<PassiveWindowPtr,
                                WeakRefCounts      > MFWeakPassiveWindowPtr;
typedef FieldContainerPtrMField<PassiveWindowPtr,
                                NoRefCounts        > MFUncountedPassiveWindowPtr;
#endif


OSG_END_NAMESPACE

#endif /* _OSGPASSIVEWINDOWFIELDS_H_ */
