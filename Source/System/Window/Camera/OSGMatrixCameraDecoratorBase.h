/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MatrixCameraDecorator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGMATRIXCAMERADECORATORBASE_H_
#define _OSGMATRIXCAMERADECORATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGWindowDef.h"

#include "OSGBaseTypes.h"

#include "OSGCameraDecorator.h" // Parent

#include "OSGMatrixFields.h" // PreViewing type
#include "OSGMatrixFields.h" // PostViewing type
#include "OSGMatrixFields.h" // PreProjectionTranslation type
#include "OSGMatrixFields.h" // PostProjectionTranslation type
#include "OSGMatrixFields.h" // PreProjection type
#include "OSGMatrixFields.h" // PostProjection type

#include "OSGMatrixCameraDecoratorFields.h"

OSG_BEGIN_NAMESPACE

class MatrixCameraDecorator;

//! \brief MatrixCameraDecorator Base Class.

class OSG_WINDOW_DLLMAPPING MatrixCameraDecoratorBase : public CameraDecorator
{
  public:

    typedef CameraDecorator Inherited;
    typedef CameraDecorator ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(MatrixCameraDecorator);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        PreViewingFieldId = Inherited::NextFieldId,
        PostViewingFieldId = PreViewingFieldId + 1,
        PreProjectionTranslationFieldId = PostViewingFieldId + 1,
        PostProjectionTranslationFieldId = PreProjectionTranslationFieldId + 1,
        PreProjectionFieldId = PostProjectionTranslationFieldId + 1,
        PostProjectionFieldId = PreProjectionFieldId + 1,
        NextFieldId = PostProjectionFieldId + 1
    };

    static const OSG::BitVector PreViewingFieldMask =
        (TypeTraits<BitVector>::One << PreViewingFieldId);
    static const OSG::BitVector PostViewingFieldMask =
        (TypeTraits<BitVector>::One << PostViewingFieldId);
    static const OSG::BitVector PreProjectionTranslationFieldMask =
        (TypeTraits<BitVector>::One << PreProjectionTranslationFieldId);
    static const OSG::BitVector PostProjectionTranslationFieldMask =
        (TypeTraits<BitVector>::One << PostProjectionTranslationFieldId);
    static const OSG::BitVector PreProjectionFieldMask =
        (TypeTraits<BitVector>::One << PreProjectionFieldId);
    static const OSG::BitVector PostProjectionFieldMask =
        (TypeTraits<BitVector>::One << PostProjectionFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


#ifdef OSG_1_GET_COMPAT
                  SFMatrix            *getSFPreViewing      (void);
#endif
                  SFMatrix            *editSFPreViewing     (void);
            const SFMatrix            *getSFPreViewing      (void) const;

#ifdef OSG_1_GET_COMPAT
                  SFMatrix            *getSFPostViewing     (void);
#endif
                  SFMatrix            *editSFPostViewing    (void);
            const SFMatrix            *getSFPostViewing     (void) const;

#ifdef OSG_1_GET_COMPAT
                  SFMatrix            *getSFPreProjectionTranslation (void);
#endif
                  SFMatrix            *editSFPreProjectionTranslation(void);
            const SFMatrix            *getSFPreProjectionTranslation (void) const;

#ifdef OSG_1_GET_COMPAT
                  SFMatrix            *getSFPostProjectionTranslation (void);
#endif
                  SFMatrix            *editSFPostProjectionTranslation(void);
            const SFMatrix            *getSFPostProjectionTranslation (void) const;

#ifdef OSG_1_GET_COMPAT
                  SFMatrix            *getSFPreProjection   (void);
#endif
                  SFMatrix            *editSFPreProjection  (void);
            const SFMatrix            *getSFPreProjection   (void) const;

#ifdef OSG_1_GET_COMPAT
                  SFMatrix            *getSFPostProjection  (void);
#endif
                  SFMatrix            *editSFPostProjection (void);
            const SFMatrix            *getSFPostProjection  (void) const;


#ifdef OSG_1_GET_COMPAT
                  Matrix              &getPreViewing      (void);
#endif
                  Matrix              &editPreViewing     (void);
            const Matrix              &getPreViewing      (void) const;

#ifdef OSG_1_GET_COMPAT
                  Matrix              &getPostViewing     (void);
#endif
                  Matrix              &editPostViewing    (void);
            const Matrix              &getPostViewing     (void) const;

#ifdef OSG_1_GET_COMPAT
                  Matrix              &getPreProjectionTranslation (void);
#endif
                  Matrix              &editPreProjectionTranslation(void);
            const Matrix              &getPreProjectionTranslation (void) const;

#ifdef OSG_1_GET_COMPAT
                  Matrix              &getPostProjectionTranslation (void);
#endif
                  Matrix              &editPostProjectionTranslation(void);
            const Matrix              &getPostProjectionTranslation (void) const;

#ifdef OSG_1_GET_COMPAT
                  Matrix              &getPreProjection   (void);
#endif
                  Matrix              &editPreProjection  (void);
            const Matrix              &getPreProjection   (void) const;

#ifdef OSG_1_GET_COMPAT
                  Matrix              &getPostProjection  (void);
#endif
                  Matrix              &editPostProjection (void);
            const Matrix              &getPostProjection  (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setPreViewing     (const Matrix &value);
            void setPostViewing    (const Matrix &value);
            void setPreProjectionTranslation(const Matrix &value);
            void setPostProjectionTranslation(const Matrix &value);
            void setPreProjection  (const Matrix &value);
            void setPostProjection (const Matrix &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  MatrixCameraDecoratorPtr create     (void);
    static  MatrixCameraDecoratorPtr createEmpty(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr shallowCopy(void) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static void   classDescInserter(TypeObject &oType);
    static Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFMatrix          _sfPreViewing;
    SFMatrix          _sfPostViewing;
    SFMatrix          _sfPreProjectionTranslation;
    SFMatrix          _sfPostProjectionTranslation;
    SFMatrix          _sfPreProjection;
    SFMatrix          _sfPostProjection;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    MatrixCameraDecoratorBase(void);
    MatrixCameraDecoratorBase(const MatrixCameraDecoratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~MatrixCameraDecoratorBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_FIELDCONTAINERPTR
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo,
                                 UInt32             uiCopyOffset);

            void execSync (      MatrixCameraDecoratorBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo,
                                 UInt32             uiCopyOffset);
#endif
#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      MatrixCameraDecoratorBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

#if 0
    virtual void execBeginEditV(ConstFieldMaskArg whichField,
                                UInt32            uiAspect,
                                UInt32            uiContainerSize);

            void execBeginEdit (ConstFieldMaskArg whichField,
                                UInt32            uiAspect,
                                UInt32            uiContainerSize);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainerPtr createAspectCopy(void) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const MatrixCameraDecoratorBase &source);
};

typedef MatrixCameraDecoratorBase *MatrixCameraDecoratorBaseP;

/** Type specific RefPtr type for MatrixCameraDecorator. */
typedef RefPtr<MatrixCameraDecoratorPtr> MatrixCameraDecoratorRefPtr;

typedef boost::mpl::if_<
    boost::mpl::bool_<MatrixCameraDecoratorBase::isNodeCore>,
    CoredNodePtr<MatrixCameraDecorator>,
    FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC>::type

        MatrixCameraDecoratorNodePtr;

OSG_END_NAMESPACE

#endif /* _OSGMATRIXCAMERADECORATORBASE_H_ */
