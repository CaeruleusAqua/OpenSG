/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TextureGrabBackground!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TextureGrabBackgroundBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 TextureGrabBackgroundBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

inline
OSG::UInt16 TextureGrabBackgroundBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the TextureGrabBackground::_sfTexture field.
inline
TextureChunkPtrConst TextureGrabBackgroundBase::getTexture(void) const
{
    return _sfTexture.getValue();
}

//! Set the value of the TextureGrabBackground::_sfTexture field.
inline
void TextureGrabBackgroundBase::setTexture(TextureChunkPtrConstArg value)
{
    editSField(TextureFieldMask);

    setRefd(_sfTexture.getValue(), value);

}
//! Get the value of the TextureGrabBackground::_sfAutoResize field.

inline
bool &TextureGrabBackgroundBase::editAutoResize(void)
{
    editSField(AutoResizeFieldMask);

    return _sfAutoResize.getValue();
}

//! Get the value of the TextureGrabBackground::_sfAutoResize field.
inline
const bool &TextureGrabBackgroundBase::getAutoResize(void) const
{
    return _sfAutoResize.getValue();
}

//! Set the value of the TextureGrabBackground::_sfAutoResize field.
inline
void TextureGrabBackgroundBase::setAutoResize(const bool &value)
{
    editSField(AutoResizeFieldMask);

    _sfAutoResize.setValue(value);
}
//! Get the value of the TextureGrabBackground::_sfBindTarget field.

inline
GLenum &TextureGrabBackgroundBase::editBindTarget(void)
{
    editSField(BindTargetFieldMask);

    return _sfBindTarget.getValue();
}

//! Get the value of the TextureGrabBackground::_sfBindTarget field.
inline
const GLenum &TextureGrabBackgroundBase::getBindTarget(void) const
{
    return _sfBindTarget.getValue();
}

//! Set the value of the TextureGrabBackground::_sfBindTarget field.
inline
void TextureGrabBackgroundBase::setBindTarget(const GLenum &value)
{
    editSField(BindTargetFieldMask);

    _sfBindTarget.setValue(value);
}
//! Get the value of the TextureGrabBackground::_sfCopyTarget field.

inline
GLenum &TextureGrabBackgroundBase::editCopyTarget(void)
{
    editSField(CopyTargetFieldMask);

    return _sfCopyTarget.getValue();
}

//! Get the value of the TextureGrabBackground::_sfCopyTarget field.
inline
const GLenum &TextureGrabBackgroundBase::getCopyTarget(void) const
{
    return _sfCopyTarget.getValue();
}

//! Set the value of the TextureGrabBackground::_sfCopyTarget field.
inline
void TextureGrabBackgroundBase::setCopyTarget(const GLenum &value)
{
    editSField(CopyTargetFieldMask);

    _sfCopyTarget.setValue(value);
}

//! create a new instance of the class
inline
TextureGrabBackgroundPtr TextureGrabBackgroundBase::create(void) 
{
    TextureGrabBackgroundPtr fc; 

    if(getClassType().getPrototype() != NullFC) 
    {
        fc = OSG::cast_dynamic<TextureGrabBackground::ObjPtr>(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

#ifdef OSG_MT_FIELDCONTAINERPTR
inline
void TextureGrabBackgroundBase::execSync(      TextureGrabBackgroundBase *pOther,
                                       ConstFieldMaskArg  whichField,
                                       ConstFieldMaskArg  syncMode  ,
                                 const UInt32             uiSyncInfo,
                                       UInt32             uiCopyOffset)
{
    Inherited::execSync(pOther, whichField, syncMode, uiSyncInfo, uiCopyOffset);

    if(FieldBits::NoField != (TextureFieldMask & whichField))
        _sfTexture.syncWith(pOther->_sfTexture);

    if(FieldBits::NoField != (AutoResizeFieldMask & whichField))
        _sfAutoResize.syncWith(pOther->_sfAutoResize);

    if(FieldBits::NoField != (BindTargetFieldMask & whichField))
        _sfBindTarget.syncWith(pOther->_sfBindTarget);

    if(FieldBits::NoField != (CopyTargetFieldMask & whichField))
        _sfCopyTarget.syncWith(pOther->_sfCopyTarget);
}
#endif

#ifdef OSG_MT_CPTR_ASPECT
inline
void TextureGrabBackgroundBase::execSync (      TextureGrabBackgroundBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode  ,
                                  const UInt32             uiSyncInfo)
{
}
#endif

#if 0
inline
void TextureGrabBackgroundBase::execBeginEdit(ConstFieldMaskArg whichField,
                                      UInt32            uiAspect,
                                      UInt32            uiContainerSize)
{
    Inherited::execBeginEdit(whichField, uiAspect, uiContainerSize);
}
#endif


inline
Char8 *TextureGrabBackgroundBase::getClassname(void)
{
    return "TextureGrabBackground";
}

typedef PointerBuilder<TextureGrabBackground>::ObjPtr          TextureGrabBackgroundPtr;
typedef PointerBuilder<TextureGrabBackground>::ObjPtrConst     TextureGrabBackgroundPtrConst;
typedef PointerBuilder<TextureGrabBackground>::ObjConstPtr     TextureGrabBackgroundConstPtr;

typedef PointerBuilder<TextureGrabBackground>::ObjPtrArg       TextureGrabBackgroundPtrArg;
typedef PointerBuilder<TextureGrabBackground>::ObjConstPtrArg  TextureGrabBackgroundConstPtrArg;
typedef PointerBuilder<TextureGrabBackground>::ObjPtrConstArg  TextureGrabBackgroundPtrConstArg;

OSG_END_NAMESPACE

#define OSGTEXTUREGRABBACKGROUNDBASE_INLINE_CVSID "@(#)$Id: $"

