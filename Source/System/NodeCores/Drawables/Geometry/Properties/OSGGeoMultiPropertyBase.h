/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class GeoMultiProperty
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGGEOMULTIPROPERTYBASE_H_
#define _OSGGEOMULTIPROPERTYBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGDrawableDef.h"

#include "OSGBaseTypes.h"

#include "OSGGeoVectorProperty.h" // Parent

#include "OSGGeoMultiPropertyDataFields.h" // Container type
#include "OSGUInt32Fields.h" // Offset type
#include "OSGGLenumFields.h" // IFormat type
#include "OSGUInt32Fields.h" // IDimension type
#include "OSGUInt32Fields.h" // ISize type
#include "OSGBoolFields.h" // INormalize type
#include "OSGUInt32Fields.h" // IStride type

#include "OSGGeoMultiPropertyFields.h"

OSG_BEGIN_NAMESPACE

class GeoMultiProperty;

//! \brief GeoMultiProperty Base Class.

class OSG_DRAWABLE_DLLMAPPING GeoMultiPropertyBase : public GeoVectorProperty
{
  public:

    typedef GeoVectorProperty Inherited;
    typedef GeoVectorProperty ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    typedef PointerFwdBuilder<GeoVectorPropertyPtr, 
                              GeoVectorPropertyConstPtr, 
                              GeoMultiProperty>::ObjPtr         ObjPtr;
    typedef PointerFwdBuilder<GeoVectorPropertyPtr, 
                              GeoVectorPropertyConstPtr, 
                              GeoMultiProperty>::ObjPtrConst    ObjPtrConst;
    typedef PointerFwdBuilder<GeoVectorPropertyPtr, 
                              GeoVectorPropertyConstPtr,
                              GeoMultiProperty>::ObjConstPtr    ObjConstPtr;
    typedef PointerFwdBuilder<GeoVectorPropertyPtr, 
                              GeoVectorPropertyConstPtr,
                              GeoMultiProperty>::ObjPtrArg      ObjPtrArg;
    typedef PointerFwdBuilder<GeoVectorPropertyPtr, 
                              GeoVectorPropertyConstPtr,
                              GeoMultiProperty>::ObjConstPtrArg ObjConstPtrArg;
    typedef PointerFwdBuilder<GeoVectorPropertyPtr, 
                              GeoVectorPropertyConstPtr,
                              GeoMultiProperty>::ObjPtrConstArg ObjPtrConstArg;

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ContainerFieldId = Inherited::NextFieldId,
        OffsetFieldId = ContainerFieldId + 1,
        IFormatFieldId = OffsetFieldId + 1,
        IDimensionFieldId = IFormatFieldId + 1,
        ISizeFieldId = IDimensionFieldId + 1,
        INormalizeFieldId = ISizeFieldId + 1,
        IStrideFieldId = INormalizeFieldId + 1,
        NextFieldId = IStrideFieldId + 1
    };

    static const OSG::BitVector ContainerFieldMask = 
        (TypeTraits<BitVector>::One << ContainerFieldId);
    static const OSG::BitVector OffsetFieldMask = 
        (TypeTraits<BitVector>::One << OffsetFieldId);
    static const OSG::BitVector IFormatFieldMask = 
        (TypeTraits<BitVector>::One << IFormatFieldId);
    static const OSG::BitVector IDimensionFieldMask = 
        (TypeTraits<BitVector>::One << IDimensionFieldId);
    static const OSG::BitVector ISizeFieldMask = 
        (TypeTraits<BitVector>::One << ISizeFieldId);
    static const OSG::BitVector INormalizeFieldMask = 
        (TypeTraits<BitVector>::One << INormalizeFieldId);
    static const OSG::BitVector IStrideFieldMask = 
        (TypeTraits<BitVector>::One << IStrideFieldId);
    static const OSG::BitVector NextFieldMask = 
        (TypeTraits<BitVector>::One << NextFieldId);


    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void); 
    static UInt32              getClassTypeId (void); 
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void); 
    virtual const FieldContainerType &getType         (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

     const SFGeoMultiPropertyDataPtr *getSFContainer (void) const;

#ifdef OSG_1_COMPAT
           SFUInt32 *getSFOffset(void);
#endif
           SFUInt32 *editSFOffset(void);
     const SFUInt32 *getSFOffset (void) const;

#ifdef OSG_1_COMPAT
           SFGLenum *getSFIFormat(void);
#endif
           SFGLenum *editSFIFormat(void);
     const SFGLenum *getSFIFormat (void) const;

#ifdef OSG_1_COMPAT
           SFUInt32 *getSFIDimension(void);
#endif
           SFUInt32 *editSFIDimension(void);
     const SFUInt32 *getSFIDimension (void) const;

#ifdef OSG_1_COMPAT
           SFUInt32 *getSFISize(void);
#endif
           SFUInt32 *editSFISize(void);
     const SFUInt32 *getSFISize (void) const;

#ifdef OSG_1_COMPAT
           SFBool *getSFINormalize(void);
#endif
           SFBool *editSFINormalize(void);
     const SFBool *getSFINormalize (void) const;

#ifdef OSG_1_COMPAT
           SFUInt32 *getSFIStride(void);
#endif
           SFUInt32 *editSFIStride(void);
     const SFUInt32 *getSFIStride (void) const;


           GeoMultiPropertyDataPtrConst getContainer(void) const;

#ifdef OSG_1_COMPAT
           UInt32 &getOffset(void);
#endif
           UInt32 &editOffset(void);
     const UInt32 &getOffset (void) const;

#ifdef OSG_1_COMPAT
           GLenum &getIFormat(void);
#endif
           GLenum &editIFormat(void);
     const GLenum &getIFormat (void) const;

#ifdef OSG_1_COMPAT
           UInt32 &getIDimension(void);
#endif
           UInt32 &editIDimension(void);
     const UInt32 &getIDimension (void) const;

#ifdef OSG_1_COMPAT
           UInt32 &getISize(void);
#endif
           UInt32 &editISize(void);
     const UInt32 &getISize (void) const;

#ifdef OSG_1_COMPAT
           bool &getINormalize(void);
#endif
           bool &editINormalize(void);
     const bool &getINormalize (void) const;

#ifdef OSG_1_COMPAT
           UInt32 &getIStride(void);
#endif
           UInt32 &editIStride(void);
     const UInt32 &getIStride (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setContainer(GeoMultiPropertyDataPtrConstArg value);
     void setOffset(const UInt32 &value);
     void setIFormat(const GLenum &value);
     void setIDimension(const UInt32 &value);
     void setISize(const UInt32 &value);
     void setINormalize(const bool &value);
     void setIStride(const UInt32 &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    virtual void pushToField     (      FieldContainerPtrConstArg pNewElement, 
                                  const UInt32                    uiFieldId  );

    virtual void insertIntoMField(const UInt32                    uiIndex, 
                                        FieldContainerPtrConstArg pNewElement, 
                                  const UInt32                    uiFieldId  );

    virtual void replaceInMField (const UInt32                    uiIndex,
                                        FieldContainerPtrConstArg pNewElement, 
                                  const UInt32                    uiFieldId  );

    virtual void replaceInMField (      FieldContainerPtrConstArg pOldElement,
                                        FieldContainerPtrConstArg pNewElement, 
                                  const UInt32                    uiFieldId  );

    virtual void removeFromMField(const UInt32                    uiIndex, 
                                  const UInt32                    uiFieldId  );
    
    virtual void removeFromMField(      FieldContainerPtrConstArg pElement, 
                                  const UInt32                    uiFieldId  );

    virtual void clearField      (const UInt32                    uiFieldId  );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  GeoMultiPropertyPtr create     (void); 
    static  GeoMultiPropertyPtr createEmpty(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr shallowCopy(void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static void   classDescInserter(TypeObject &oType);
    static Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFGeoMultiPropertyDataPtr _sfContainer;
    SFUInt32 _sfOffset;
    SFGLenum _sfIFormat;
    SFUInt32 _sfIDimension;
    SFUInt32 _sfISize;
    SFBool _sfINormalize;
    SFUInt32 _sfIStride;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    GeoMultiPropertyBase(void);
    GeoMultiPropertyBase(const GeoMultiPropertyBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~GeoMultiPropertyBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const GeoMultiProperty *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_FIELDCONTAINERPTR
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo,
                                 UInt32             uiCopyOffset);

            void execSync (      GeoMultiPropertyBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo,
                                 UInt32             uiCopyOffset);
#endif
#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      GeoMultiPropertyBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

#if 0
    virtual void execBeginEditV(ConstFieldMaskArg whichField, 
                                UInt32            uiAspect,
                                UInt32            uiContainerSize);

            void execBeginEdit (ConstFieldMaskArg whichField, 
                                UInt32            uiAspect,
                                UInt32            uiContainerSize);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainerPtr createAspectCopy(void) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const GeoMultiPropertyBase &source);
};

typedef GeoMultiPropertyBase *GeoMultiPropertyBaseP;

/** Type specific RefPtr type for GeoMultiProperty. */
typedef RefPtr<GeoMultiPropertyPtr> GeoMultiPropertyRefPtr;

typedef osgIF<
    GeoMultiPropertyBase::isNodeCore,

    CoredNodePtr<GeoMultiProperty>,
    FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC>::_IRet

        GeoMultiPropertyNodePtr;

OSG_END_NAMESPACE

#define OSGGEOMULTIPROPERTYBASE_HEADER_CVSID "@(#)$Id$"

#endif /* _OSGGEOMULTIPROPERTYBASE_H_ */
