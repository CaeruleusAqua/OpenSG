/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SpotLight!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SpotLightBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 SpotLightBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 SpotLightBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the SpotLight::_sfDirection field.

inline
Vec3r &SpotLightBase::editDirection(void)
{
    editSField(DirectionFieldMask);

    return _sfDirection.getValue();
}

//! Get the value of the SpotLight::_sfDirection field.
inline
const Vec3r &SpotLightBase::getDirection(void) const
{
    return _sfDirection.getValue();
}

#ifdef OSG_1_COMPAT
inline
Vec3r               &SpotLightBase::getDirection      (void)
{
    return this->editDirection      ();
}
#endif

//! Set the value of the SpotLight::_sfDirection field.
inline
void SpotLightBase::setDirection(const Vec3r &value)
{
    editSField(DirectionFieldMask);

    _sfDirection.setValue(value);
}
//! Get the value of the SpotLight::_sfSpotExponent field.

inline
Real &SpotLightBase::editSpotExponent(void)
{
    editSField(SpotExponentFieldMask);

    return _sfSpotExponent.getValue();
}

//! Get the value of the SpotLight::_sfSpotExponent field.
inline
const Real &SpotLightBase::getSpotExponent(void) const
{
    return _sfSpotExponent.getValue();
}

#ifdef OSG_1_COMPAT
inline
Real                &SpotLightBase::getSpotExponent   (void)
{
    return this->editSpotExponent   ();
}
#endif

//! Set the value of the SpotLight::_sfSpotExponent field.
inline
void SpotLightBase::setSpotExponent(const Real &value)
{
    editSField(SpotExponentFieldMask);

    _sfSpotExponent.setValue(value);
}
//! Get the value of the SpotLight::_sfSpotCutOff field.

inline
Real &SpotLightBase::editSpotCutOff(void)
{
    editSField(SpotCutOffFieldMask);

    return _sfSpotCutOff.getValue();
}

//! Get the value of the SpotLight::_sfSpotCutOff field.
inline
const Real &SpotLightBase::getSpotCutOff(void) const
{
    return _sfSpotCutOff.getValue();
}

#ifdef OSG_1_COMPAT
inline
Real                &SpotLightBase::getSpotCutOff     (void)
{
    return this->editSpotCutOff     ();
}
#endif

//! Set the value of the SpotLight::_sfSpotCutOff field.
inline
void SpotLightBase::setSpotCutOff(const Real &value)
{
    editSField(SpotCutOffFieldMask);

    _sfSpotCutOff.setValue(value);
}

//! create a new instance of the class
inline
SpotLightPtr SpotLightBase::create(void)
{
    SpotLightPtr fc;

    if(getClassType().getPrototype() != NullFC)
    {
        fc = OSG::cast_dynamic<SpotLight::ObjPtr>(
            getClassType().getPrototype()-> shallowCopy());
    }

    return fc;
}

#ifdef OSG_MT_FIELDCONTAINERPTR
inline
void SpotLightBase::execSync(      SpotLightBase *pOther,
                                       ConstFieldMaskArg  whichField,
                                       ConstFieldMaskArg  syncMode,
                                 const UInt32             uiSyncInfo,
                                       UInt32             uiCopyOffset)
{
    Inherited::execSync(pOther, whichField, syncMode, uiSyncInfo, uiCopyOffset);

    if(FieldBits::NoField != (DirectionFieldMask & whichField))
        _sfDirection.syncWith(pOther->_sfDirection);

    if(FieldBits::NoField != (SpotExponentFieldMask & whichField))
        _sfSpotExponent.syncWith(pOther->_sfSpotExponent);

    if(FieldBits::NoField != (SpotCutOffFieldMask & whichField))
        _sfSpotCutOff.syncWith(pOther->_sfSpotCutOff);
}
#endif

#ifdef OSG_MT_CPTR_ASPECT
inline
void SpotLightBase::execSync (      SpotLightBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (DirectionFieldMask & whichField))
        _sfDirection.syncWith(pFrom->_sfDirection);

    if(FieldBits::NoField != (SpotExponentFieldMask & whichField))
        _sfSpotExponent.syncWith(pFrom->_sfSpotExponent);

    if(FieldBits::NoField != (SpotCutOffFieldMask & whichField))
        _sfSpotCutOff.syncWith(pFrom->_sfSpotCutOff);
}
#endif

#if 0
inline
void SpotLightBase::execBeginEdit(ConstFieldMaskArg whichField,
                                      UInt32            uiAspect,
                                      UInt32            uiContainerSize)
{
    Inherited::execBeginEdit(whichField, uiAspect, uiContainerSize);
}
#endif


inline
Char8 *SpotLightBase::getClassname(void)
{
    return "SpotLight";
}

typedef PointerBuilder<SpotLight>::ObjPtr          SpotLightPtr;
typedef PointerBuilder<SpotLight>::ObjPtrConst     SpotLightPtrConst;
typedef PointerBuilder<SpotLight>::ObjConstPtr     SpotLightConstPtr;

typedef PointerBuilder<SpotLight>::ObjPtrArg       SpotLightPtrArg;
typedef PointerBuilder<SpotLight>::ObjConstPtrArg  SpotLightConstPtrArg;
typedef PointerBuilder<SpotLight>::ObjPtrConstArg  SpotLightPtrConstArg;

OSG_END_NAMESPACE

#define OSGSPOTLIGHTBASE_INLINE_CVSID "@(#)$Id$"
