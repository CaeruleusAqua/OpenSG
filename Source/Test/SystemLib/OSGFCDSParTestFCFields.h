/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGFCDSPARTESTFCFIELDS_H_
#define _OSGFCDSPARTESTFCFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGSystemDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGFieldContainerPtrSField.h"
#include "OSGFieldContainerPtrMField.h"


OSG_BEGIN_NAMESPACE

class FCDSParTestFC;

#if !defined(OSG_DO_DOC) // created as a dummy class, remove to prevent doubles
//! FCDSParTestFCPtr

OSG_GEN_CONTAINERPTR(FCDSParTestFC);

#endif

#if !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)
/*! \ingroup GrpSystemFieldTraits
 */
#if !defined(OSG_DOC_DEV_TRAITS)
/*! \hideinhierarchy */
#endif

template <>
struct FieldTraits<FCDSParTestFCPtr> :
    public FieldTraitsFCPtrBase<FCDSParTestFCPtr>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<FCDSParTestFCPtr>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_SYSTEM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFFCDSParTestFCPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFFCDSParTestFCPtr"; }
};

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdFCDSParTestFCPtr"; 
}

#if !defined(OSG_DOC_DEV_TRAITS)
/*! \class  FieldTraitsTemplateBase<FCDSParTestFCPtr, 0>
    \hideinhierarchy
 */
#endif


template <>
struct FieldTraits<FCDSParTestFCPtr, 1> :
    public FieldTraitsFCPtrBase<FCDSParTestFCPtr, 1>
{
  private:

  public:

    typedef FieldTraits<FCDSParTestFCPtr, 1>  Self;
    typedef FieldContainerPtr           ParentType;

    static const FieldType::Cardinality eParentCard = FieldType::SingleField;

    enum                        { Convertible = NotConvertible };

    static OSG_SYSTEM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFFCDSParTestFCPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFFCDSParTestFCPtr"; }
};

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakFieldContainerChildFCDSParTestFCPtr"; 
}

template<> inline
const Char8 *FieldTraits<FCDSParTestFCPtr, 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdFieldContainerChildFCDSParTestFCPtr"; 
}


#endif // !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)


#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS)
/*! \ingroup GrpSystemFieldSingle */

typedef FieldContainerPtrSField<FCDSParTestFCPtr,
                                RecordedRefCountPolicy  > SFRecFCDSParTestFCPtr;
typedef FieldContainerPtrSField<FCDSParTestFCPtr,
                                UnrecordedRefCountPolicy> SFUnrecFCDSParTestFCPtr;
typedef FieldContainerPtrSField<FCDSParTestFCPtr,
                                WeakRefCountPolicy      > SFWeakFCDSParTestFCPtr;
typedef FieldContainerPtrSField<FCDSParTestFCPtr,
                                NoRefCountPolicy        > SFUncountedFCDSParTestFCPtr;
#endif


#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS)
/*! \ingroup GrpSystemFieldMulti */

typedef FieldContainerPtrMField<FCDSParTestFCPtr,
                                RecordedRefCountPolicy  > MFRecFCDSParTestFCPtr;
typedef FieldContainerPtrMField<FCDSParTestFCPtr,
                                UnrecordedRefCountPolicy> MFUnrecFCDSParTestFCPtr;
typedef FieldContainerPtrMField<FCDSParTestFCPtr,
                                WeakRefCountPolicy      > MFWeakFCDSParTestFCPtr;
typedef FieldContainerPtrMField<FCDSParTestFCPtr,
                                NoRefCountPolicy        > MFUncountedFCDSParTestFCPtr;
#endif



typedef FieldContainerPtrChildSField<
          FCDSParTestFCPtr, 
          UnrecordedRefCountPolicy,
          1                  > SFUnrecFieldContainerChildFCDSParTestFCPtr;

typedef SFUnrecFieldContainerChildFCDSParTestFCPtr 
    SFUnrecChildFCDSParTestFCPtr;


typedef FieldContainerPtrChildMField<
          FCDSParTestFCPtr, 
          UnrecordedRefCountPolicy,
          1                  > MFUnrecFieldContainerChildFCDSParTestFCPtr;

typedef MFUnrecFieldContainerChildFCDSParTestFCPtr
    MFUnrecChildFCDSParTestFCPtr;

OSG_END_NAMESPACE

#endif /* _OSGFCDSPARTESTFCFIELDS_H_ */
