/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FCDTestFC!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FCDTestFCBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 FCDTestFCBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 FCDTestFCBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the FCDTestFC::_sfFieldSFPub field.

inline
UInt32 &FCDTestFCBase::editFieldSFPub(void)
{
    editSField(FieldSFPubFieldMask);

    return _sfFieldSFPub.getValue();
}

//! Get the value of the FCDTestFC::_sfFieldSFPub field.
inline
const UInt32 FCDTestFCBase::getFieldSFPub(void) const
{
    return _sfFieldSFPub.getValue();
}

#ifdef OSG_1_GET_COMPAT
inline
UInt32              &FCDTestFCBase::getFieldSFPub     (void)
{
    return this->editFieldSFPub     ();
}
#endif

//! Set the value of the FCDTestFC::_sfFieldSFPub field.
inline
void FCDTestFCBase::setFieldSFPub(const UInt32 &value)
{
    editSField(FieldSFPubFieldMask);

    _sfFieldSFPub.setValue(value);
}
//! Get the value of the FCDTestFC::_sfFieldSFPro field.

inline
UInt32 &FCDTestFCBase::editFieldSFPro(void)
{
    editSField(FieldSFProFieldMask);

    return _sfFieldSFPro.getValue();
}

//! Get the value of the FCDTestFC::_sfFieldSFPro field.
inline
const UInt32 FCDTestFCBase::getFieldSFPro(void) const
{
    return _sfFieldSFPro.getValue();
}

#ifdef OSG_1_GET_COMPAT
inline
UInt32              &FCDTestFCBase::getFieldSFPro     (void)
{
    return this->editFieldSFPro     ();
}
#endif

//! Set the value of the FCDTestFC::_sfFieldSFPro field.
inline
void FCDTestFCBase::setFieldSFPro(const UInt32 &value)
{
    editSField(FieldSFProFieldMask);

    _sfFieldSFPro.setValue(value);
}
//! Get the value of the FCDTestFC::_sfFieldSFPri field.

inline
UInt32 &FCDTestFCBase::editFieldSFPri(void)
{
    editSField(FieldSFPriFieldMask);

    return _sfFieldSFPri.getValue();
}

//! Get the value of the FCDTestFC::_sfFieldSFPri field.
inline
const UInt32 FCDTestFCBase::getFieldSFPri(void) const
{
    return _sfFieldSFPri.getValue();
}

#ifdef OSG_1_GET_COMPAT
inline
UInt32              &FCDTestFCBase::getFieldSFPri     (void)
{
    return this->editFieldSFPri     ();
}
#endif

//! Set the value of the FCDTestFC::_sfFieldSFPri field.
inline
void FCDTestFCBase::setFieldSFPri(const UInt32 &value)
{
    editSField(FieldSFPriFieldMask);

    _sfFieldSFPri.setValue(value);
}

//! Get the value of the \a index element the FCDTestFC::_mfFieldMFPub field.
inline
const UInt32 FCDTestFCBase::getFieldMFPub(const UInt32 index) const
{
    return _mfFieldMFPub[index];
}

inline
UInt32 &FCDTestFCBase::editFieldMFPub(const UInt32 index)
{
    editMField(FieldMFPubFieldMask, _mfFieldMFPub);

    return _mfFieldMFPub[index];
}

#ifdef OSG_1_GET_COMPAT
inline
UInt32              &FCDTestFCBase::getFieldMFPub     (const UInt32 index)
{
    return this->editFieldMFPub     (index);
}

inline
MFUInt32            &FCDTestFCBase::getFieldMFPub     (void)
{
    return this->editFieldMFPub     ();
}

#endif


//! Get the value of the \a index element the FCDTestFC::_mfFieldMFPro field.
inline
const UInt32 FCDTestFCBase::getFieldMFPro(const UInt32 index) const
{
    return _mfFieldMFPro[index];
}

inline
UInt32 &FCDTestFCBase::editFieldMFPro(const UInt32 index)
{
    editMField(FieldMFProFieldMask, _mfFieldMFPro);

    return _mfFieldMFPro[index];
}

#ifdef OSG_1_GET_COMPAT
inline
UInt32              &FCDTestFCBase::getFieldMFPro     (const UInt32 index)
{
    return this->editFieldMFPro     (index);
}

inline
MFUInt32            &FCDTestFCBase::getFieldMFPro     (void)
{
    return this->editFieldMFPro     ();
}

#endif


//! Get the value of the \a index element the FCDTestFC::_mfFieldMFPri field.
inline
const UInt32 FCDTestFCBase::getFieldMFPri(const UInt32 index) const
{
    return _mfFieldMFPri[index];
}

inline
UInt32 &FCDTestFCBase::editFieldMFPri(const UInt32 index)
{
    editMField(FieldMFPriFieldMask, _mfFieldMFPri);

    return _mfFieldMFPri[index];
}

#ifdef OSG_1_GET_COMPAT
inline
UInt32              &FCDTestFCBase::getFieldMFPri     (const UInt32 index)
{
    return this->editFieldMFPri     (index);
}

inline
MFUInt32            &FCDTestFCBase::getFieldMFPri     (void)
{
    return this->editFieldMFPri     ();
}

#endif



#ifdef OSG_MT_CPTR_ASPECT
inline
void FCDTestFCBase::execSync (      FCDTestFCBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (FieldSFPubFieldMask & whichField))
        _sfFieldSFPub.syncWith(pFrom->_sfFieldSFPub);

    if(FieldBits::NoField != (FieldSFProFieldMask & whichField))
        _sfFieldSFPro.syncWith(pFrom->_sfFieldSFPro);

    if(FieldBits::NoField != (FieldSFPriFieldMask & whichField))
        _sfFieldSFPri.syncWith(pFrom->_sfFieldSFPri);

    if(FieldBits::NoField != (FieldSFNoFieldMask & whichField))
        _sfFieldSFNo.syncWith(pFrom->_sfFieldSFNo);

    if(FieldBits::NoField != (FieldMFPubFieldMask & whichField))
        _mfFieldMFPub.syncWith(pFrom->_mfFieldMFPub,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (FieldMFProFieldMask & whichField))
        _mfFieldMFPro.syncWith(pFrom->_mfFieldMFPro,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (FieldMFPriFieldMask & whichField))
        _mfFieldMFPri.syncWith(pFrom->_mfFieldMFPri,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (FieldMFNoFieldMask & whichField))
        _mfFieldMFNo.syncWith(pFrom->_mfFieldMFNo,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);
}
#endif


inline
Char8 *FCDTestFCBase::getClassname(void)
{
    return "FCDTestFC";
}
OSG_GEN_CONTAINERPTR(FCDTestFC);

OSG_END_NAMESPACE

