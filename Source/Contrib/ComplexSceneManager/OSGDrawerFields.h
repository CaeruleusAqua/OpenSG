/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDRAWERFIELDS_H_
#define _OSGDRAWERFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGContribCSMDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class Drawer;

#if !defined(OSG_DO_DOC) // created as a dummy class, remove to prevent doubles
//! DrawerPtr

OSG_GEN_CONTAINERPTR(Drawer);

#endif

#if !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)
/*! \ingroup GrpContribCSMFieldTraits
 */
#if !defined(OSG_DOC_DEV_TRAITS)
/*! \hideinhierarchy */
#endif

template <>
struct FieldTraits<Drawer *> :
    public FieldTraitsFCPtrBase<Drawer *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<Drawer *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBCSM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFDrawerPtr"; }
};


template<> inline
const Char8 *FieldTraits<Drawer *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecDrawerPtr"; 
}

template<> inline
const Char8 *FieldTraits<Drawer *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecDrawerPtr"; 
}

template<> inline
const Char8 *FieldTraits<Drawer *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakDrawerPtr"; 
}

template<> inline
const Char8 *FieldTraits<Drawer *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdDrawerPtr"; 
}

#if !defined(OSG_DOC_DEV_TRAITS)
/*! \class  FieldTraitsTemplateBase<DrawerPtr, 0>
    \hideinhierarchy
 */
#endif

template <>
struct FieldTraits<Drawer *, 1> : 
    public FieldTraitsFCPtrBase<Drawer *, 1>
{
  private:

    static  DataType                                _type;

  public:

    static const bool bIsPointerField = true;

    typedef FieldTraits<Drawer *, 1>        Self;


    enum             { Convertible = Self::NotConvertible };
    
    static OSG_CONTRIBCSM_DLLMAPPING
                 DataType &getType (void);

    static const Char8    *getSName(void) 
    {
        return "SFParentDrawerPtr"; 
    }

    static const Char8    *getMName(void) 
    { 
        return "MFParentDrawerPtr"; 
    }
};

#endif // !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)



#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS)
/*! \ingroup GrpContribCSMFieldMulti */

typedef PointerMField<Drawer *,
                      RecordedRefCountPolicy  > MFRecDrawerPtr;
typedef PointerMField<Drawer *,
                      UnrecordedRefCountPolicy> MFUnrecDrawerPtr;
typedef PointerMField<Drawer *,
                      WeakRefCountPolicy      > MFWeakDrawerPtr;
typedef PointerMField<Drawer *,
                      NoRefCountPolicy        > MFUncountedDrawerPtr;
#endif



typedef ParentPointerSField<
          Drawer *, 
          NoRefCountPolicy,
          1    > SFParentDrawerPtr;
OSG_END_NAMESPACE

#endif /* _OSGDRAWERFIELDS_H_ */
