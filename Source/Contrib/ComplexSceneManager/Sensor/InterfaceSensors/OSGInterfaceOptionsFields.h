/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGINTERFACEOPTIONSFIELDS_H_
#define _OSGINTERFACEOPTIONSFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGContribCSMDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class InterfaceOptions;

#if !defined(OSG_DO_DOC) // created as a dummy class, remove to prevent doubles
//! InterfaceOptionsPtr

OSG_GEN_CONTAINERPTR(InterfaceOptions);

#endif

#if !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)
/*! \ingroup GrpContribCSMFieldTraits
 */
#if !defined(OSG_DOC_DEV_TRAITS)
/*! \hideinhierarchy */
#endif

template <>
struct FieldTraits<InterfaceOptions *> :
    public FieldTraitsFCPtrBase<InterfaceOptions *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<InterfaceOptions *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBCSM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFInterfaceOptionsPtr"; }
};

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecInterfaceOptionsPtr"; 
}

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecInterfaceOptionsPtr"; 
}

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakInterfaceOptionsPtr"; 
}

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdInterfaceOptionsPtr"; 
}


#if !defined(OSG_DOC_DEV_TRAITS)
/*! \class  FieldTraitsTemplateBase<InterfaceOptionsPtr, 0>
    \hideinhierarchy
 */
#endif

class DeviceInterfaceSensor;

template <>
struct FieldTraits<InterfaceOptions *, 1> :
    public FieldTraitsFCPtrBase<InterfaceOptions *, 1>
{
  private:

  public:

    typedef DeviceInterfaceSensor            *ParentType;
    typedef FieldTraits<InterfaceOptions *, 1>  Self;


    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBCSM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFInterfaceOptionsPtr"; }
};

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildInterfaceOptionsPtr"; 
}

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildInterfaceOptionsPtr"; 
}

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildInterfaceOptionsPtr"; 
}

template<> inline
const Char8 *FieldTraits<InterfaceOptions *, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildInterfaceOptionsPtr"; 
}



#endif // !defined(OSG_DO_DOC) || (OSG_DOC_LEVEL >= 3)


#if !defined(OSG_DO_DOC) || defined(OSG_DOC_FIELD_TYPEDEFS)
/*! \ingroup GrpContribCSMFieldSingle */

typedef PointerSField<InterfaceOptions *,
                      RecordedRefCountPolicy  > SFRecInterfaceOptionsPtr;
typedef PointerSField<InterfaceOptions *,
                      UnrecordedRefCountPolicy> SFUnrecInterfaceOptionsPtr;
typedef PointerSField<InterfaceOptions *,
                      WeakRefCountPolicy      > SFWeakInterfaceOptionsPtr;
typedef PointerSField<InterfaceOptions *,
                      NoRefCountPolicy        > SFUncountedInterfaceOptionsPtr;
#endif



typedef ChildPointerSField<
          InterfaceOptions *, 
          UnrecordedRefCountPolicy,
          1             > SFUnrecChildInterfaceOptionsPtr;

OSG_END_NAMESPACE

#endif /* _OSGINTERFACEOPTIONSFIELDS_H_ */
