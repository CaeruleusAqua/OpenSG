/* This is a template file for fcdEdit.
 * To create it from sample source,  cut'n'paste the source and apply the following
 * substitutions:
 * s|\|\\|g 
 * s|"|\"|g 
 * s|^|"| 
 * s|$|",|
 */

char *FCBaseTemplate_inl[]={
"/*---------------------------------------------------------------------------*\\",
" *                                OpenSG                                     *",
" *                                                                           *",
" *                                                                           *",
" *               Copyright (C) 2000-2006 by the OpenSG Forum                 *",
" *                                                                           *",
" *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                License                                    *",
" *                                                                           *",
" * This library is free software; you can redistribute it and/or modify it   *",
" * under the terms of the GNU Library General Public License as published    *",
" * by the Free Software Foundation, version 2.                               *",
" *                                                                           *",
" * This library is distributed in the hope that it will be useful, but       *",
" * WITHOUT ANY WARRANTY; without even the implied warranty of                *",
" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *",
" * Library General Public License for more details.                          *",
" *                                                                           *",
" * You should have received a copy of the GNU Library General Public         *",
" * License along with this library; if not, write to the Free Software       *",
" * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                Changes                                    *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"",
"/*****************************************************************************\\",
" *****************************************************************************",
" **                                                                         **",
" **                  This file is automatically generated.                  **",
" **                                                                         **",
" **          Any changes made to this file WILL be lost when it is          **",
" **           regenerated, which can become necessary at any time.          **",
" **                                                                         **",
" **     Do not change this file, changes should be done in the derived      **",
" **     class @!Classname!@!",
" **                                                                         **",
" *****************************************************************************",
"\\*****************************************************************************/",
"",
"OSG_BEGIN_NAMESPACE",
"",
"",
"//! access the type of the class",
"inline",
"OSG::FieldContainerType &@!Classname!@Base::getClassType(void)",
"{",
"    return _type; ",
"} ",
"",
"//! access the numerical type of the class",
"inline",
"OSG::UInt32 @!Classname!@Base::getClassTypeId(void) ",
"{",
"    return _type.getId(); ",
"} ",
"",
"inline",
"OSG::UInt16 @!Classname!@Base::getClassGroupId(void)",
"{",
"    return _type.getGroupId();",
"}",
"",
"@@if !Decorator",
"@@if !isDecoratable",
"/*------------------------------ get -----------------------------------*/",
"", 
"@@BeginSFFieldLoop@@",
"@@if isPtrField",
"",
"//! Get the value of the @!Classname!@::_@!fieldname!@ field.",
"inline",
"@!Fieldtype!@Const @!Classname!@Base::get@!Fieldname!@(void) const",
"{",
"    return _@!fieldname!@.getValue();",
"}",
"",
"//! Set the value of the @!Classname!@::_@!fieldname!@ field.",
"inline",
"@@if passFieldMask",
"void @!Classname!@Base::set@!Fieldname!@(@!Fieldtype!@ConstArg value,",
"                             const UInt16      uiStoredInFieldId)",
"@@else",
"void @!Classname!@Base::set@!Fieldname!@(@!Fieldtype!@ConstArg value)",
"@@endif",
"{",
"    editSField(@!Fieldname!@FieldMask);",
"",
"@@if linkMParent",
"    @!Classname!@Ptr thisP = Inherited::constructPtr<@!Classname!@>(",
"        static_cast<@!Classname!@ *>(this));",
"",
"    if(_@!fieldname!@.getValue() != NullFC)",
"    {",
"        _@!fieldname!@.getValue()->subParent(thisP);",
"    }",
"",
"@@endif",
"@@if linkSParent",
"    if(_@!fieldname!@.getValue() != NullFC)",
"    {",
"        _@!fieldname!@.getValue()->setParent(NullFC);",
"    }",
"",
"@@endif",
"@@if doRefCount",
"    setRefd(_@!fieldname!@.getValue(), value);",
"@@else",
"    _@!fieldname!@.setValue(value);",
"@@endif",
"@@if linkMParent",
"",
"    if(_@!fieldname!@.getValue() != NullFC)",
"    {",
"        _@!fieldname!@.getValue()->addParent(thisP, @!Fieldname!@FieldMask);",
"    }",
"@@endif",
"@@if linkSParent",
"",
"    @!Classname!@Ptr thisP = Inherited::constructPtr<@!Classname!@>(",
"        static_cast<@!Classname!@ *>(this));",
"",
"    if(_@!fieldname!@.getValue() != NullFC)",
"    {",
"        _@!fieldname!@.getValue()->setParent(thisP, @!Fieldname!@FieldMask);",
"    }",
"@@endif",
"@@if passFieldMask",
"    _@!fieldname!@.getValue().setParentFieldPos(uiStoredInFieldId);",
"@@endif",
"",
"}",
"@@else",
"//! Get the value of the @!Classname!@::_@!fieldname!@ field.",
"",
"inline",
"@!Fieldtype!@ &@!Classname!@Base::edit@!Fieldname!@(void)",
"{",
"    editSField(@!Fieldname!@FieldMask);",
"",
"    return _@!fieldname!@.getValue();",
"}",
"",
"//! Get the value of the @!Classname!@::_@!fieldname!@ field.",
"inline",
"const @!Fieldtype!@ &@!Classname!@Base::get@!Fieldname!@(void) const",
"{",
"    return _@!fieldname!@.getValue();",
"}",
"",
"//! Set the value of the @!Classname!@::_@!fieldname!@ field.",
"inline",
"void @!Classname!@Base::set@!Fieldname!@(const @!Fieldtype!@ &value)",
"{",
"    editSField(@!Fieldname!@FieldMask);",
"",
"    _@!fieldname!@.setValue(value);",
"}",
"@@endif",
"@@EndSFFieldLoop@@",
"",
"@@BeginMFFieldLoop@@",
"//! Get the value of the \\a index element the @!Classname!@::_@!fieldname!@ field.",
"inline",
"@@if isPtrField",
"@!Fieldtype!@Const @!Classname!@Base::get@!Fieldname!@(const UInt32 index) const",
"@@else",
"const @!Fieldtype!@ &@!Classname!@Base::get@!Fieldname!@(const UInt32 index) const",
"@@endif",
"{",
"    return _@!fieldname!@[index];",
"}",
"@@if !isPtrField",
"",
"inline",
"@!Fieldtype!@ &@!Classname!@Base::edit@!Fieldname!@(const UInt32 index)",
"{",
"    editMField(@!Fieldname!@FieldMask, _@!fieldname!@);",
"",
"    return _@!fieldname!@[index];",
"}",
"",
"//! Get the @!Classname!@::_@!fieldname!@ field.",
"inline",
"@!FieldNamespace!@@!CARDINALITY!@@!CapsFieldtypeClean!@ &@!Classname!@Base::edit@!Fieldname!@(void)",
"{",
"    editMField(@!Fieldname!@FieldMask, _@!fieldname!@);",
"",
"    return _@!fieldname!@;",
"}",
"@@endif",
"",
"//! Get the @!Classname!@::_@!fieldname!@ field.",
"inline",
"const @!FieldNamespace!@@!CARDINALITY!@@!CapsFieldtypeClean!@ &@!Classname!@Base::get@!Fieldname!@(void) const",
"{",
"    return _@!fieldname!@;",
"}",
"",
"@@EndMFFieldLoop@@",
"@@endif",
"@@else",
"",
"inline",
"const @!Parent!@PtrConst @!Classname!@Base::getDecoratee(void) const",
"{",
"    return _sfDecoratee.getValue();",
"}",
"",
"inline",
"void @!Classname!@Base::setDecoratee(const @!Parent!@Ptr &value)",
"{",
"    editSField(DecorateeFieldMask);",
"",
"    setRefd(_sfDecoratee.getValue(), value);",
"}",
"@@endif",
"@@if !Abstract",
"//! create a new instance of the class",
"inline",
"@!Classname!@Ptr @!Classname!@Base::create(void) ",
"{",
"    @!Classname!@Ptr fc; ",
"",
"    if(getClassType().getPrototype() != NullFC) ",
"    {",
"        fc = OSG::cast_dynamic<@!Classname!@::ObjPtr>(",
"            getClassType().getPrototype()-> shallowCopy()); ",
"    }",
"    ",
"    return fc; ",
"}",
"@@endif",
"",
"#ifdef OSG_MT_FIELDCONTAINERPTR",
"inline",
"void @!Classname!@Base::execSync(      @!Classname!@Base *pOther,",
"                                       ConstFieldMaskArg  whichField,",
"                                       ConstFieldMaskArg  syncMode  ,",
"                                 const UInt32             uiSyncInfo,",
"                                       UInt32             uiCopyOffset)",
"{",
"    Inherited::execSync(pOther, whichField, syncMode, uiSyncInfo, uiCopyOffset);",
"@@if Decorator",
"",
"    if(FieldBits::NoField != (DecorateeFieldMask & whichField))",
"    {",
"        _sfDecoratee.syncWith(pOther->_sfDecoratee);",
"    }",
"@@else",
"@@BeginFieldLoop@@",
"",
"@@if isSField",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"        _@!fieldname!@.syncWith(pOther->_@!fieldname!@);",
"@@else",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"        _@!fieldname!@.syncWith(pOther->_@!fieldname!@, ",
"                                syncMode,",
"                                uiSyncInfo,",
"                                uiCopyOffset);",
"@@endif",
"@@EndFieldLoop@@",
"@@endif",
"}",
"#endif",
"",
"#ifdef OSG_MT_CPTR_ASPECT",
"inline",
"void @!Classname!@Base::execSync (      @!Classname!@Base *pFrom,",
"                                        ConstFieldMaskArg  whichField,",
"                                        AspectOffsetStore &oOffsets,",
"                                        ConstFieldMaskArg  syncMode  ,",
"                                  const UInt32             uiSyncInfo)",
"{",
"}",
"#endif",
"",
"#if 0",
"inline",
"void @!Classname!@Base::execBeginEdit(ConstFieldMaskArg whichField,",
"                                      UInt32            uiAspect,",
"                                      UInt32            uiContainerSize)",
"{",
"    Inherited::execBeginEdit(whichField, uiAspect, uiContainerSize);",
"@@if !Decorator",
"@@BeginMFFieldLoop@@",
"",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"    {",
"        _@!fieldname!@.beginEdit(uiAspect, uiContainerSize);",
"    }",
"@@EndMFFieldLoop@@",
"@@endif",
"}",
"#endif",
"",
"",
"inline",
"Char8 *@!Classname!@Base::getClassname(void)",
"{",
"    return \"@!Classname!@\";
"}",
"",
"typedef PointerBuilder<@!Classname!@>::ObjPtr          @!Classname!@Ptr;",
"typedef PointerBuilder<@!Classname!@>::ObjPtrConst     @!Classname!@PtrConst;",
"typedef PointerBuilder<@!Classname!@>::ObjConstPtr     @!Classname!@ConstPtr;",
"",
"typedef PointerBuilder<@!Classname!@>::ObjPtrArg       @!Classname!@PtrArg;",
"typedef PointerBuilder<@!Classname!@>::ObjConstPtrArg  @!Classname!@ConstPtrArg;",
"typedef PointerBuilder<@!Classname!@>::ObjPtrConstArg  @!Classname!@PtrConstArg;",
"",
"OSG_END_NAMESPACE",
"",
"#define OSG@!CLASSNAME!@BASE_INLINE_CVSID \"@(#)$Id: $\"",
"",
NULL};
