#OSG V1.0 

Node
{
  core MaterialGroup
  {
    material ChunkMaterial
    {
      chunks
      [
        SimpleSHLChunk
        {
          variables ShaderProgramVariables
          {
            variables
            [
              ShaderVariableReal
              {
                name "ColR"
                value 1.0
              }
              ShaderVariableReal
              {
                name "ColG"
                value 0.6
              }
              ShaderVariableReal
              {
                name "ColB"
                value 0.6
              }
              ShaderVariableReal
              {
                name "ColB"
                value 0.0
              }
            ]
          }

          vertexShader 
          [
            ShaderProgram
            {
              shaderType GL_VERTEX_SHADER

              program "

                varying float Diffuse; 

                void main(void)
                {
                  // calculate vertex position in eye coordinates
                  vec4 ecPosition = -normalize(gl_ModelViewMatrix * gl_Vertex);

                  // compute the transformed normal
                  vec3 tnorm      = normalize(gl_NormalMatrix * gl_Normal);

                  // Calculate a diffuse light intensity
                  Diffuse             = dot(ecPosition.xyz, 
                                            tnorm     );

                  // output final vertex information
                  gl_Position     = gl_ModelViewProjectionMatrix * gl_Vertex;
                }
              "
            }
          ]

          fragmentShader 
          [
            ShaderProgram
            {
              shaderType GL_FRAGMENT_SHADER

              program "
                varying float Diffuse; 
                uniform float ColR;
                uniform float ColG;
                uniform float ColB;

                void main (void)
                {
                  gl_FragColor = vec4(ColR * Diffuse, 
                                      ColG * Diffuse, 
                                      ColB * Diffuse, 
                                      1.);
                }
              "
            }
          ]
        }
      ]
    }
  }

  children
  [
    Node
    {
      core Inline
      {
        url "../../SimpleTeapot/object.wrl"
      }
    }
  ]
}